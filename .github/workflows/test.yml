name: 🧪 Test Suite

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        vscode-version: [stable, insiders]
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run linting
      run: npm run lint
      
    - name: 🏗️ Compile TypeScript
      run: npm run compile
      
    - name: 🧪 Run tests with VS Code ${{ matrix.vscode-version }}
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        npm test
      env:
        VSCODE_VERSION: ${{ matrix.vscode-version }}
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node${{ matrix.node-version }}-vscode${{ matrix.vscode-version }}
        path: |
          test-results.xml
          coverage/
        retention-days: 30

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Compile TypeScript
      run: npm run compile
      
    - name: 📦 Package extension
      run: |
        npm install -g @vscode/vsce
        vsce package --no-dependencies
        
    - name: 📁 Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: filemet-vsix
        path: "*.vsix"
        retention-days: 90

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔒 Run security audit
      run: npm audit --audit-level=moderate
      
    - name: 🔍 Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq '.vulnerabilities | length' | grep -q '^0$'; then
          echo "✅ No high-severity vulnerabilities found"
        else
          echo "❌ High-severity vulnerabilities detected"
          npm audit --audit-level=high
          exit 1
        fi

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 📏 Check code formatting
      run: |
        if command -v prettier >/dev/null 2>&1; then
          npx prettier --check "src/**/*.{ts,js,json}"
        else
          echo "⚠️ Prettier not configured, skipping format check"
        fi
        
    - name: 📊 Type checking
      run: npx tsc --noEmit
      
    - name: 🎯 Test coverage report
      run: |
        if [ -f "coverage/lcov.info" ]; then
          echo "📊 Test coverage available"
          # Add coverage reporting here if needed
        else
          echo "⚠️ No coverage report found"
        fi
